<UserControl
	x:Class="WPFWeather.Views.WeatherHomeView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:attachedProp="clr-namespace:WPFWeather.AttachedProp"
	xmlns:control="clr-namespace:WPFWeather.UserControls"
	xmlns:converters="clr-namespace:WPFWeather.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
	xmlns:local="clr-namespace:WPFWeather.Views"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:models="clr-namespace:WPFWeather.Models"
	xmlns:vms="clr-namespace:WPFWeather.ViewModels"
	d:DesignHeight="450"
	d:DesignWidth="835"
	mc:Ignorable="d">
	<UserControl.Resources>
		<converters:MathConverter x:Key="MathConverter" />
		<converters:InverseBooleanToVisibilityConverter x:Key="InverseVisibilityConverter" />
		<BooleanToVisibilityConverter x:Key="VisibilityConverter" />
		<converters:InvertBooleanConverter x:Key="InvertBooleanConverter" />
		<converters:MultiBooleanToVisibilityConverter x:Key="MultiBooleanToVisibilityConverter" />
	</UserControl.Resources>

	<Grid
		d:DataContext="{d:DesignInstance vms:WeatherHomeViewModel}"
		Background="{StaticResource BrushBgDefault}">
		<Grid
			d:Visibility="Hidden"
			Visibility="{Binding HasError, Converter={StaticResource VisibilityConverter}}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="2*" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="2*" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<Grid
				Grid.Row="1"
				Grid.Column="1">
				<control:ErrorDisplay
					ButtonCommand="{Binding ReloadCommand}"
					ButtonText="Reload"
					ErrorText="{Binding ErrorMessage}" />
			</Grid>
		</Grid>
		<control:LoadingSpinner
			Margin="80"
			d:Visibility="Hidden">

			<control:LoadingSpinner.Visibility>
				<MultiBinding Converter="{StaticResource MultiBooleanToVisibilityConverter}">
					<Binding Path="IsLoading" />
					<Binding
						Converter="{StaticResource InvertBooleanConverter}"
						Path="HasError" />
				</MultiBinding>
			</control:LoadingSpinner.Visibility>
		</control:LoadingSpinner>

		<Grid d:Visibility="Visible">
			<Grid.Visibility>
				<MultiBinding Converter="{StaticResource MultiBooleanToVisibilityConverter}">
					<Binding
						Converter="{StaticResource InvertBooleanConverter}"
						Path="IsLoading" />
					<Binding
						Converter="{StaticResource InvertBooleanConverter}"
						Path="HasError" />
				</MultiBinding>
			</Grid.Visibility>
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="65*" />
					<RowDefinition Height="35*" />
				</Grid.RowDefinitions>
				<Grid Row="0">
					<Grid Margin="16,16,16,8">
						<Border
							Background="{StaticResource BrushBgSubtle}"
							CornerRadius="7" />

						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<Viewbox
								Grid.Column="0"
								Stretch="Uniform">
								<control:WeatherIconDisplay
									Padding="2"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Description="{Binding SelectedWeather.Description}"
									Foreground="{StaticResource BrushFgIcon}" />
							</Viewbox>
							<Grid
								Grid.Column="1"
								Margin="0,0,5,0">
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>

								<Button
									Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
									Margin="0,12,9,0"
									Padding="4"
									HorizontalAlignment="Right"
									VerticalAlignment="Top"
									Background="Transparent"
									BorderThickness="0"
									Command="{Binding ReloadCommand}"
									Foreground="{StaticResource BrushFgMuted}"
									Style="{DynamicResource RoundBorder}">
									<icons:PackIconUnicons Kind="Sync" />
								</Button>
								<Grid Grid.Row="0">
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="3*" />
									</Grid.RowDefinitions>
									<Viewbox
										Grid.Row="1"
										HorizontalAlignment="Left"
										Stretch="Uniform">
										<DockPanel>
											<TextBlock
												d:Text="15°"
												FontSize="20"
												Foreground="{StaticResource BrushFgDefault}"
												Text="{Binding SelectedWeather.Temperature, StringFormat={}{0}°}" />
											<Button
												Margin="3,0,0,1"
												HorizontalAlignment="Right"
												VerticalAlignment="Bottom"
												Background="Transparent"
												BorderThickness="0"
												Command="{Binding SetLocationCommand}"
												FontSize="15"
												Foreground="{StaticResource BrushFgMuted}"
												Style="{DynamicResource RoundBorder}">
												<TextBlock Text="{Binding Location}" />
											</Button>
										</DockPanel>
									</Viewbox>
								</Grid>
								<Grid Grid.Row="1">
									<Viewbox
										Margin="0,5,0,5"
										HorizontalAlignment="Left">
										<Viewbox.Resources>
											<Style TargetType="{x:Type control:InfoCard}">
												<Setter Property="Margin" Value="7,0" />
											</Style>
										</Viewbox.Resources>
										<StackPanel Orientation="Horizontal">
											<control:InfoCard
												Grid.Column="0"
												d:Text="15%"
												Info="Cloudiness"
												Text="{Binding SelectedWeather.CloudPercentage, StringFormat={}{0}%}">
												<control:InfoCard.Icon>
													<icons:PackIconWeatherIcons
														HorizontalAlignment="Stretch"
														VerticalAlignment="Stretch"
														Kind="Cloud" />
												</control:InfoCard.Icon>
											</control:InfoCard>
											<control:InfoCard
												Grid.Column="1"
												d:Text="94%"
												Info="Humidity"
												Text="{Binding SelectedWeather.Humidity, StringFormat={}{0}%}">
												<control:InfoCard.Icon>
													<icons:PackIconRemixIcon
														HorizontalAlignment="Stretch"
														VerticalAlignment="Stretch"
														Kind="ContrastDrop2Line" />
												</control:InfoCard.Icon>
											</control:InfoCard>
											<control:InfoCard
												Grid.Column="2"
												d:Text="1015hPa"
												Info="Pressure"
												Text="{Binding SelectedWeather.Pressure, StringFormat={}{0}hPa}">
												<control:InfoCard.Icon>
													<icons:PackIconFontAwesome
														HorizontalAlignment="Stretch"
														VerticalAlignment="Stretch"
														Kind="WeightHangingSolid" />
												</control:InfoCard.Icon>
											</control:InfoCard>
										</StackPanel>
									</Viewbox>
								</Grid>
							</Grid>
						</Grid>
					</Grid>
				</Grid>
				<Grid
					Margin="16,0"
					Row="1">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="auto" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="*" />
						<RowDefinition Height="*" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<ListView
						x:Name="ForecastsListView"
						Grid.RowSpan="3"
						Grid.Column="1"
						HorizontalContentAlignment="Stretch"
						VerticalContentAlignment="Stretch"
						attachedProp:ScrollMaxEventsExtensions.ScrollHitXMaxCommand="{Binding FetchFutureWeatherCommand}"
						attachedProp:ScrollMaxEventsExtensions.ScrollHitXMinCommand="{Binding FetchPastWeatherCommand}"
						Background="Transparent"
						BorderThickness="0"
						ItemsSource="{Binding Weather}"
						SelectedItem="{Binding SelectedWeather}">

						<ListView.ItemsPanel>
							<ItemsPanelTemplate>
								<VirtualizingStackPanel
									Background="Transparent"
									Orientation="Horizontal" />
							</ItemsPanelTemplate>
						</ListView.ItemsPanel>
						<ListView.ItemTemplate>
							<DataTemplate DataType="models:WeatherData">
								<control:WeatherCard
									MinWidth="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource MathConverter}, ConverterParameter=(@VALUE/7*4)}"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									d:Temperature="15"
									d:Time="12:00"
									Description="{Binding Description}"
									Temperature="{Binding Temperature}"
									Time="{Binding Time}" />
							</DataTemplate>
						</ListView.ItemTemplate>

						<d:ListItem />
						<d:ListItem />
						<d:ListItem />
						<d:ListItem />
						<d:ListItem />
					</ListView>
				</Grid>
			</Grid>
		</Grid>
	</Grid>
</UserControl>